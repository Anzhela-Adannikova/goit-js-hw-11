{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '49633160-4cce24fc01914cf63e9c1a790';\n\nexport function getImagesByQuery(query) {\n    const params = {\n    key: API_KEY, \n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    };\n\n    return axios\n    .get(BASE_URL, { params })\n\n    .then(response => {\n        console.log(response);\n        return response.data;\n        \n    }) \n    .catch(error => {\n        throw error;\n    })\n    \n    \n}","export const gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconsole.dir(loader);\n\nexport function createGallery(images) {\n    return images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n        `<li class=\"gallery-item\">\n            <a href=\"${largeImageURL}\" class=\"gallery-link\">\n                <img class=\"gallery-img\" src=\"${webformatURL}\" alt=\"${tags}\" />\n            </a>\n            <div class=\"info\">\n                <div class=\"info-colum\">\n                    <p class=\"info-title\">Likes</p>\n                    <p class=\"info-value\">${likes}</p>\n                </div>\n                <div class=\"info-colum\">\n                    <p class=\"info-title\">Views</p>\n                    <p class=\"info-value\">${views}</p>\n                </div>\n                <div class=\"info-colum\">\n                    <p class=\"info-title\">Comments</p>\n                    <p class=\"info-value\">${comments}</p>\n                </div>\n                <div class=\"info-colum\">\n                    <p class=\"info-title\">Downloads</p>\n                    <p class=\"info-value\">${downloads}</p>\n                </div>\n            </div>\n        </li>`\n        \n    ).join('');\n}\n\nexport function clearGallery() {\n    gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n    loader.style.display = \"block\";\n}\n\nexport function hideLoader() {\n    loader.style.display = \"none\";\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { getImagesByQuery } from './js/pixabay-api.js';\nimport { \n    createGallery,\n    clearGallery,\n    showLoader,\n    hideLoader, \n    gallery\n} from './js/render-functions.js';\n\nconst iconPath = new URL('./img/icon-error.svg', import.meta.url).href;\n\nconst form = document.querySelector('.form');\nconsole.dir(form);\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    enableKeyboard: true,\n});\n\nhideLoader();\n\nform.addEventListener('submit', handleSearch);\n\nfunction handleSearch (event) {\n    event.preventDefault();\n\n    const query = form.elements['search-text'].value.trim();\n\n    if(!query) return;\n    \n    clearGallery();\n    showLoader();\n\n    getImagesByQuery(query)\n        .then(({ hits }) => {\n            if(hits.length === 0) {\n                iziToast.info({\n                    message: 'Sorry, there are no images matching your search query. Please try again!',\n                    backgroundColor:' #ef4040',\n                    maxWidth: '434',\n                    messageColor:' #fafafb',\n                    iconColor: ' #fafafb',\n                    iconUrl: iconPath,\n                });\n            return;\n\n            }\n            gallery.innerHTML = createGallery(hits);\n            lightbox.refresh();\n        })\n        .catch(() => {\n            iziToast.info({\n                message: 'Something went wrong!',\n                backgroundColor:' #ef4040',\n                maxWidth: '434',\n                messageColor:' #fafafb',\n                iconColor: ' #fafafb',\n                iconUrl: iconPath,\n            });\n        })\n        .finally(() => {\n            hideLoader();\n        });\n        form.reset();\n};\n\n"],"names":["BASE_URL","API_KEY","getImagesByQuery","query","params","axios","response","error","gallery","loader","createGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","iconPath","form","lightbox","SimpleLightbox","handleSearch","event","hits","iziToast"],"mappings":"owBAEA,MAAMA,EAAW,2BACXC,EAAU,qCAET,SAASC,EAAiBC,EAAO,CACpC,MAAMC,EAAS,CACf,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEI,OAAOE,EACN,IAAIL,EAAU,CAAE,OAAAI,EAAQ,EAExB,KAAKE,IACF,QAAQ,IAAIA,CAAQ,EACbA,EAAS,KAEnB,EACA,MAAMC,GAAS,CACZ,MAAMA,CACd,CAAK,CAGL,CC3BO,MAAMC,EAAU,SAAS,cAAc,UAAU,EAClDC,EAAS,SAAS,cAAc,SAAS,EAC/C,QAAQ,IAAIA,CAAM,EAEX,SAASC,EAAcC,EAAQ,CAClC,OAAOA,EAAO,IAAI,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACrF;AAAA,uBACeL,CAAa;AAAA,gDACYD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,4CAK9BC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,4CAIRC,CAAS;AAAA;AAAA;AAAA,cAKrD,EAAM,KAAK,EAAE,CACb,CAEO,SAASC,GAAe,CAC3BX,EAAQ,UAAY,EACxB,CAEO,SAASY,GAAa,CACzBX,EAAO,MAAM,QAAU,OAC3B,CAEO,SAASY,GAAa,CACzBZ,EAAO,MAAM,QAAU,MAC3B,CC7BA,MAAMa,EAAW,IAAgD,IAAA,2/BAAA,YAAA,GAAA,EAAC,KAE5DC,EAAO,SAAS,cAAc,OAAO,EAC3C,QAAQ,IAAIA,CAAI,EAEhB,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,IACd,eAAgB,EACpB,CAAC,EAEDJ,IAEAE,EAAK,iBAAiB,SAAUG,CAAY,EAE5C,SAASA,EAAcC,EAAO,CAC1BA,EAAM,eAAc,EAEpB,MAAMxB,EAAQoB,EAAK,SAAS,aAAa,EAAE,MAAM,OAE7CpB,IAEJgB,IACAC,IAEAlB,EAAiBC,CAAK,EACjB,KAAK,CAAC,CAAE,KAAAyB,KAAW,CAChB,GAAGA,EAAK,SAAW,EAAG,CAClBC,EAAS,KAAK,CACV,QAAS,2EACT,gBAAgB,WAChB,SAAU,MACV,aAAa,WACb,UAAW,WACX,QAASP,CAC7B,CAAiB,EACL,MAEC,CACDd,EAAQ,UAAYE,EAAckB,CAAI,EACtCJ,EAAS,QAAO,CAC5B,CAAS,EACA,MAAM,IAAM,CACTK,EAAS,KAAK,CACV,QAAS,wBACT,gBAAgB,WAChB,SAAU,MACV,aAAa,WACb,UAAW,WACX,QAASP,CACzB,CAAa,CACb,CAAS,EACA,QAAQ,IAAM,CACXD,GACZ,CAAS,EACDE,EAAK,MAAK,EAClB"}